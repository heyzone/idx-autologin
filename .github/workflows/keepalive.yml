- name: Check WEB_URL status and redirection
  env:
    WEB_URL: ${{ secrets.WEB_URL }}
  run: |
    # 验证 WEB_URL 是否为空
    if [ -z "$WEB_URL" ]; then
      echo "Error: WEB_URL is empty or not set"
      echo "NEEDS_RECOVERY=true" >> $GITHUB_ENV
      exit 1
    fi

    # 清理 WEB_URL（去除首尾空白和换行符）
    CLEANED_URL=$(echo "$WEB_URL" | tr -d '[:space:]\n')
    echo "Cleaned WEB_URL: $(echo "$CLEANED_URL" | sed 's|https\?://[^/]*|***|')"  # 掩码输出

    # 确保 WEB_URL 以 http:// 或 https:// 开头
    if [[ ! "$CLEANED_URL" =~ ^https?:// ]]; then
      CLEANED_URL="https://$CLEANED_URL"
      echo "Added protocol to WEB_URL: $(echo "$CLEANED_URL" | sed 's|https\?://[^/]*|***|')"
    fi

    # 使用 curl 检查 HTTP 状态码
    HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "$CLEANED_URL")
    echo "WEB_URL status code: $HTTP_STATUS"
    echo "HTTP_STATUS=$HTTP_STATUS" >> $GITHUB_ENV

    # 如果状态码不是 200，直接标记需要恢复
    if [ "$HTTP_STATUS" != "200" ]; then
      echo "NEEDS_RECOVERY=true" >> $GITHUB_ENV
      exit 0
    fi

    # 如果状态码是 200，使用 Playwright 检查是否跳转
    cat << 'EOF' > check_redirect.py
    from playwright.sync_api import sync_playwright
    import sys
    import re
    def main():
        web_url = sys.argv[1]
        # 验证 URL 格式
        if not re.match(r'^https?://[^\s/$.?#].[^\s]*$', web_url):
            print(f"Invalid URL format: {web_url}")
            sys.exit(1)
        try:
            with sync_playwright() as p:
                browser = p.firefox.launch(headless=True)
                page = browser.new_page()
                response = page.goto(web_url, wait_until="networkidle", timeout=30000)
                final_url = page.url
                browser.close()
                # 检查最终 URL 是否与初始 URL 一致
                if final_url != web_url:
                    print(f"Redirection detected: {web_url} -> {final_url}")
                    sys.exit(1)  # 跳转，标记需要恢复
                else:
                    print("No redirection detected")
                    sys.exit(0)  # 无跳转
        except Exception as e:
            print(f"Playwright error: {str(e)}")
            sys.exit(1)  # 任何错误都标记需要恢复
    if __name__ == "__main__":
        main()
    EOF

    # 运行 Playwright 脚本
    python check_redirect.py "$CLEANED_URL"
    if [ $? -eq 1 ]; then
      echo "NEEDS_RECOVERY=true" >> $GITHUB_ENV
    else
      echo "NEEDS_RECOVERY=false" >> $GITHUB_ENV
    fi
