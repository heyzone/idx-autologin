name: Keepalive Workflow

on:
  push:
    branches: [ main ]
  schedule:
    # 每 5 分钟运行，模拟上午 8-12 点和晚上 18-23 点
    - cron: '*/30 21-23,0-12 * * *'
  workflow_dispatch:  # 支持手动触发

jobs:
  keepalive:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget gnupg libgbm1 libasound2 libxss1 \
            libatk1.0-0 libatk-bridge2.0-0 libxtst6 libdrm2 libxcomposite1 \
            libxdamage1 libxfixes3 libxrandr2 libcups2 libxkbcommon0 \
            libpango-1.0-0 libcairo2 libegl1 libglib2.0-0 libnspr4 libnss3 xvfb

      - name: Install Firefox for Playwright
        run: |
          sudo apt-get install -y firefox

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install playwright

      - name: Install Playwright browsers
        run: python -m playwright install firefox

      - name: Create playwright.version
        run: |
          if [ ! -f playwright.version ]; then
            echo "1.34.0" > playwright.version
          fi

      - name: Check WEB_URL status
        env:
          WEB_URL: ${{ secrets.WEB_URL }}
        run: |
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -L "$WEB_URL")
          echo "WEB_URL status code: $HTTP_STATUS"
          echo "HTTP_STATUS=$HTTP_STATUS" >> $GITHUB_ENV

      - name: Run recovery if status is not 200
        if: env.HTTP_STATUS != '200'
        env:
          COOK_URL: ${{ secrets.COOK_URL }}
          GOOGLE_PW: ${{ secrets.GOOGLE_PW }}
          APP_URL: ${{ secrets.APP_URL }}
        run: |
          # 下载 google_cookies.json
          curl -s -L "$COOK_URL" -o google_cookies.json
          if [ -f google_cookies.json ]; then
            echo "Successfully downloaded google_cookies.json"
          else
            echo "Error: Failed to download google_cookies.json"
            exit 1
          fi
          
          # 运行 main.py
          python main.py

      - name: Skip recovery if URL is accessible
        if: env.HTTP_STATUS == '200'
        run: echo "URL is accessible, no need to run recovery script"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip/
            ~/.cache/ms-playwright/
            google_cookies.json
          key: ${{ github.ref_name }}-cache
          restore-keys: ${{ github.ref_name }}-cache-

      - name: Commit google_cookies.json
        if: env.HTTP_STATUS != '200'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add google_cookies.json
          git commit -m "Update google_cookies.json" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
